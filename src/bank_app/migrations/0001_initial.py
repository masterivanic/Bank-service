# Generated by Django 5.2.7 on 2025-10-17 02:15

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BookletAccountEntity",
            fields=[
                (
                    "entity_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_number", models.UUIDField()),
                ("balance", models.DecimalField(decimal_places=2, max_digits=3)),
                ("deposit_limit", models.DecimalField(decimal_places=2, max_digits=3)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "booklet_account",
            },
        ),
        migrations.CreateModel(
            name="TransationEntity",
            fields=[
                (
                    "entity_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_id", models.UUIDField()),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("CURRENT_ACCOUNT", "CURRENT_ACCOUNT"),
                            ("BOOKLET_ACCOUNT", "BOOKLET_ACCOUNT"),
                        ],
                        max_length=25,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=3)),
                ("transation_date", models.DateTimeField(auto_now=True)),
                ("balance_after", models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                "db_table": "transaction",
            },
        ),
        migrations.CreateModel(
            name="BankAccountEntity",
            fields=[
                (
                    "entity_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_number", models.UUIDField(default=uuid.uuid4)),
                ("balance", models.DecimalField(decimal_places=2, max_digits=3)),
                (
                    "overdraft_amount",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                ("is_allow_overdraft", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "bank_account",
                "unique_together": {("entity_id", "account_number")},
            },
        ),
        migrations.CreateModel(
            name="MonthlyStatementEntity",
            fields=[
                (
                    "entity_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_id", models.UUIDField()),
                ("account_type", models.CharField(max_length=25)),
                ("account_number", models.UUIDField()),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("generated_at", models.DateTimeField(auto_now=True)),
                (
                    "opening_balance",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                (
                    "closing_balance",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                ("transations", models.ManyToManyField(to="bank_app.transationentity")),
            ],
            options={
                "db_table": "monthlystatement",
            },
        ),
    ]
